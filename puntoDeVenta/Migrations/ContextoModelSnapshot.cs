// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using puntoDeVenta.Data;

#nullable disable

namespace puntoDeVenta.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("puntoDeVenta.Models.BlocCompra", b =>
                {
                    b.Property<int>("BlocCompraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlocCompraID"), 1L, 1);

                    b.Property<string>("NombreProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cantidad")
                        .HasColumnType("int");

                    b.Property<double?>("importe")
                        .HasColumnType("float");

                    b.Property<string>("nombreProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("precioCompra")
                        .HasColumnType("float");

                    b.HasKey("BlocCompraID");

                    b.ToTable("blocCompras");
                });

            modelBuilder.Entity("puntoDeVenta.Models.BlocVenta", b =>
                {
                    b.Property<int>("BlocVentaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlocVentaID"), 1L, 1);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("igv")
                        .HasColumnType("float");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("BlocVentaID");

                    b.ToTable("blocVentas");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaID"), 1L, 1);

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoriaID");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Compra", b =>
                {
                    b.Property<int>("CompraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompraID"), 1L, 1);

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductoID")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorID")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<double>("importe")
                        .HasColumnType("float");

                    b.Property<string>("nombreProveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroCompra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precioCompra")
                        .HasColumnType("float");

                    b.HasKey("CompraID");

                    b.HasIndex("ProductoID");

                    b.HasIndex("ProveedorID");

                    b.ToTable("compra");
                });

            modelBuilder.Entity("puntoDeVenta.Models.ListaCompra", b =>
                {
                    b.Property<int>("ListaCompraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListaCompraID"), 1L, 1);

                    b.Property<int?>("CompraID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("numeroCompra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("total")
                        .HasColumnType("float");

                    b.HasKey("ListaCompraID");

                    b.HasIndex("CompraID");

                    b.ToTable("listaCompras");
                });

            modelBuilder.Entity("puntoDeVenta.Models.ListaVenta", b =>
                {
                    b.Property<int>("ListaVentaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListaVentaID"), 1L, 1);

                    b.Property<int?>("VentasID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("numeroVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("total")
                        .HasColumnType("float");

                    b.HasKey("ListaVentaID");

                    b.HasIndex("VentasID");

                    b.ToTable("listaVentas");
                });

            modelBuilder.Entity("puntoDeVenta.Models.NumeroCorrelativo", b =>
                {
                    b.Property<int>("NumeroCorrelativoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroCorrelativoID"), 1L, 1);

                    b.Property<int?>("CantidadDigitos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UltimoNumero")
                        .HasColumnType("int");

                    b.HasKey("NumeroCorrelativoID");

                    b.ToTable("numeroCorrelativos");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoID"), 1L, 1);

                    b.Property<int?>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ProveedorID")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("precioCompra")
                        .HasColumnType("float");

                    b.Property<double>("precioVenta")
                        .HasColumnType("float");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("ProductoID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("ProveedorID");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Proveedor", b =>
                {
                    b.Property<int>("ProveedorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedorID"), 1L, 1);

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ruc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("ProveedorID");

                    b.ToTable("proveedor");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"), 1L, 1);

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolID");

                    b.ToTable("rols");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"), 1L, 1);

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("numeroDni")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("telefono")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("UsuarioID");

                    b.HasIndex("RolID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Ventas", b =>
                {
                    b.Property<int>("VentasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentasID"), 1L, 1);

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("igv")
                        .HasColumnType("float");

                    b.Property<string>("nombreCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.Property<string>("tipoVenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("VentasID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("ventas");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Compra", b =>
                {
                    b.HasOne("puntoDeVenta.Models.Producto", "producto")
                        .WithMany("compras")
                        .HasForeignKey("ProductoID");

                    b.HasOne("puntoDeVenta.Models.Proveedor", "proveedor")
                        .WithMany("compras")
                        .HasForeignKey("ProveedorID");

                    b.Navigation("producto");

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("puntoDeVenta.Models.ListaCompra", b =>
                {
                    b.HasOne("puntoDeVenta.Models.Compra", "compra")
                        .WithMany("compras")
                        .HasForeignKey("CompraID");

                    b.Navigation("compra");
                });

            modelBuilder.Entity("puntoDeVenta.Models.ListaVenta", b =>
                {
                    b.HasOne("puntoDeVenta.Models.Ventas", "venta")
                        .WithMany("listaVentas")
                        .HasForeignKey("VentasID");

                    b.Navigation("venta");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Producto", b =>
                {
                    b.HasOne("puntoDeVenta.Models.Categoria", "categoria")
                        .WithMany("productos")
                        .HasForeignKey("CategoriaID");

                    b.HasOne("puntoDeVenta.Models.Proveedor", "proveedor")
                        .WithMany("productos")
                        .HasForeignKey("ProveedorID");

                    b.Navigation("categoria");

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Usuario", b =>
                {
                    b.HasOne("puntoDeVenta.Models.Rol", "rol")
                        .WithMany("usuario")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Ventas", b =>
                {
                    b.HasOne("puntoDeVenta.Models.Usuario", "usuario")
                        .WithMany("ventas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Categoria", b =>
                {
                    b.Navigation("productos");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Compra", b =>
                {
                    b.Navigation("compras");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Producto", b =>
                {
                    b.Navigation("compras");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Proveedor", b =>
                {
                    b.Navigation("compras");

                    b.Navigation("productos");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Rol", b =>
                {
                    b.Navigation("usuario");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Usuario", b =>
                {
                    b.Navigation("ventas");
                });

            modelBuilder.Entity("puntoDeVenta.Models.Ventas", b =>
                {
                    b.Navigation("listaVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
